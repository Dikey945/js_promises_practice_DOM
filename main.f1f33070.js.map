{"version":3,"sources":["scripts/main.js"],"names":["body","document","querySelector","handlePromise","resultStatus","text","insertAdjacentHTML","firstPromise","Promise","resolve","reject","addEventListener","setTimeout","Error","then","result","catch","err","secondPromise","thirdPromise","listener"],"mappings":";AAAA,aAEA,IAAMA,EAAOC,SAASC,cAAc,QAE9BC,EAAgB,SAACC,EAAcC,GACnCL,OAAAA,EAAKM,mBACH,YAGUF,mDAAAA,OAAAA,EAENC,mBAAAA,OAAAA,EAPc,mBAYhBE,EAAe,IAAIC,QAAQ,SAACC,EAASC,GACzCT,SAASU,iBAAiB,QAAS,WACjCF,OAAAA,EAAQ,gCAGVG,WAAW,WACTF,EAAO,IAAIG,MAAM,gCAChB,OAGLN,EACGO,KAAK,SAAAC,GACJZ,OAAAA,EAAc,UAAWY,KAE1BC,MAAM,SAAAC,GACLd,OAAAA,EAAc,UAAWc,KAG7B,IAAMC,EAAgB,IAAIV,QAAQ,SAAAC,GAChCR,SAASU,iBAAiB,QAAS,WACjCF,OAAAA,EAAQ,iCAGVR,SAASU,iBAAiB,cAAe,WACvCF,OAAAA,EAAQ,mCAIZS,EACGJ,KAAK,SAAAC,GACJZ,OAAAA,EAAc,UAAWY,KAG7B,IAAMI,EAAe,IAAIX,QAAQ,SAAAC,GAC/BR,SAASU,iBAAiB,QAAS,WACjCF,OAAAA,EAAQ,WAGVR,SAASU,iBAAiB,cAAe,WACvCF,OAAAA,EAAQ,mBAIZU,EACGL,KAAK,SAACC,GACDK,IAAAA,EAQG,OALLA,EADa,UAAXL,EACS,cAEA,QAGN,IAAIP,QAAQ,SAAAC,GACjBR,OAAAA,SAASU,iBAAiBS,EAAU,WAClCX,OAAAA,EAAQ,oCAIbK,KAAK,SAAAC,GACJZ,OAAAA,EAAc,UAAWY","file":"main.f1f33070.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst body = document.querySelector('body');\n\nconst handlePromise = (resultStatus, text) => (\n  body.insertAdjacentHTML(\n    'beforeend',\n    `<div\n      data-qa=\"notification\"\n      class=${resultStatus}\n    >\n      ${text}\n    </div>>`\n  )\n);\n\nconst firstPromise = new Promise((resolve, reject) => {\n  document.addEventListener('click', () => (\n    resolve('First promise was resolved')\n  ));\n\n  setTimeout(() => {\n    reject(new Error('First promise was rejected'));\n  }, 3000);\n});\n\nfirstPromise\n  .then(result => (\n    handlePromise('success', result)\n  ))\n  .catch(err => (\n    handlePromise('warning', err)\n  ));\n\nconst secondPromise = new Promise(resolve => {\n  document.addEventListener('click', () => (\n    resolve('Second promise was resolved')\n  ));\n\n  document.addEventListener('contextmenu', () => (\n    resolve('Second promise was resolved')\n  ));\n});\n\nsecondPromise\n  .then(result => (\n    handlePromise('success', result)\n  ));\n\nconst thirdPromise = new Promise(resolve => {\n  document.addEventListener('click', () => (\n    resolve('click')\n  ));\n\n  document.addEventListener('contextmenu', () => (\n    resolve('contextmenu')\n  ));\n});\n\nthirdPromise\n  .then((result) => {\n    let listener;\n\n    if (result === 'click') {\n      listener = 'contextmenu';\n    } else {\n      listener = 'click';\n    }\n\n    return new Promise(resolve => (\n      document.addEventListener(listener, () => (\n        resolve('Third promise was resolved')\n      ))\n    ));\n  })\n  .then(result => (\n    handlePromise('success', result)\n  ));\n"]}